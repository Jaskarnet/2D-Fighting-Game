
sourceCompatibility = 1.7
repositories {
    mavenCentral()
}
dependencies {
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.15.2'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: '17-ea+11'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: '17-ea+11'
    implementation group: 'org.controlsfx', name: 'controlsfx', version: '11.1.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.15.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.14.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.2'
    implementation group: 'com.esotericsoftware', name: 'kryo', version: '4.0.0'
    implementation group: 'com.esotericsoftware', name: 'kryonet', version: '2.22.0-RC1'
    implementation group: 'org.bitlet', name: 'weupnp', version: '0.1.4'
}
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets.main.java.srcDirs = [ "src/" ]

eclipse.project.name = appName + "-core"

task writeAllAssetsToFile {
    doLast {
        // projectfolder/assets
        def assetsFolder = new File("${project.rootDir}/assets/")
        // projectfolder/assets/assets.txt
        def assetsFile = new File(assetsFolder, "assets.txt")
        // delete that file in case we've already created it
        assetsFile.delete()

        // iterate through all files inside that folder
        // convert it to a relative path
        // and append it to assets.txt the file
        fileTree(assetsFolder).collect {assetsFolder.relativePath(it) }.each {
            assetsFile.append(it + "\n")
        }
    }
}